#!/usr/bin/env python3
"""
Zeeky AI Setup Script
Helps users configure their Zeeky AI installation
"""

import os
import sys
import subprocess
import json
from pathlib import Path

def print_banner():
    """Print Zeeky AI banner"""
    banner = """
    ╔══════════════════════════════════════════════════════════════╗
    ║                        🚀 ZEEKY AI 2.0                       ║
    ║                   Enhanced Setup Assistant                   ║
    ║                                                              ║
    ║  Revolutionary AI Assistant with Human-like Responses        ║
    ╚══════════════════════════════════════════════════════════════╝
    """
    print(banner)

def check_python_version():
    """Check if Python version is compatible"""
    if sys.version_info < (3, 8):
        print("❌ Error: Python 3.8 or higher is required")
        print(f"   Current version: {sys.version}")
        return False
    print(f"✅ Python version: {sys.version.split()[0]}")
    return True

def install_requirements():
    """Install required packages"""
    print("\n📦 Installing required packages...")
    
    requirements = [
        "fastapi>=0.104.0",
        "uvicorn>=0.24.0",
        "httpx>=0.25.0",
        "python-multipart>=0.0.6",
        "jinja2>=3.1.2",
        "python-dotenv>=1.0.0"
    ]
    
    for requirement in requirements:
        try:
            print(f"   Installing {requirement}...")
            subprocess.check_call([sys.executable, "-m", "pip", "install", requirement], 
                                stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
            print(f"   ✅ {requirement} installed")
        except subprocess.CalledProcessError:
            print(f"   ❌ Failed to install {requirement}")
            return False
    
    return True

def setup_environment():
    """Setup environment variables"""
    print("\n🔧 Setting up environment...")
    
    env_file = Path(".env")
    env_vars = {}
    
    # Load existing .env if it exists
    if env_file.exists():
        with open(env_file, 'r') as f:
            for line in f:
                if '=' in line and not line.startswith('#'):
                    key, value = line.strip().split('=', 1)
                    env_vars[key] = value
    
    # OpenAI API Key
    if 'OPENAI_API_KEY' not in env_vars or env_vars['OPENAI_API_KEY'] == 'your-openai-key-here':
        print("\n🔑 OpenAI API Key Setup")
        print("   To enable real AI responses, you need an OpenAI API key.")
        print("   Get one at: https://platform.openai.com/api-keys")
        
        api_key = input("\n   Enter your OpenAI API key (or press Enter to skip): ").strip()
        if api_key:
            env_vars['OPENAI_API_KEY'] = api_key
            print("   ✅ OpenAI API key configured")
        else:
            env_vars['OPENAI_API_KEY'] = 'your-openai-key-here'
            print("   ⚠️  Skipped - Zeeky will use enhanced simulation mode")
    else:
        print("   ✅ OpenAI API key already configured")
    
    # Other optional API keys
    optional_keys = {
        'ANTHROPIC_API_KEY': 'Anthropic Claude API (optional)',
        'GOOGLE_API_KEY': 'Google Gemini API (optional)',
        'COHERE_API_KEY': 'Cohere API (optional)'
    }
    
    for key, description in optional_keys.items():
        if key not in env_vars:
            env_vars[key] = ''
    
    # Write .env file
    with open(env_file, 'w') as f:
        f.write("# Zeeky AI Environment Configuration\n")
        f.write("# Generated by setup_zeeky.py\n\n")
        for key, value in env_vars.items():
            f.write(f"{key}={value}\n")
    
    print(f"   ✅ Environment file created: {env_file}")
    return True

def create_startup_script():
    """Create startup scripts for different platforms"""
    print("\n📝 Creating startup scripts...")
    
    # Windows batch file
    with open("start_zeeky.bat", "w") as f:
        f.write("""@echo off
echo Starting Zeeky AI...
echo.
echo 🚀 Zeeky AI is starting up...
echo 🌐 Frontend will be available at: http://localhost:8000
echo 🔧 Backend API will be available at: http://localhost:8000/docs
echo.
python app.py
pause
""")
    
    # Unix shell script
    with open("start_zeeky.sh", "w") as f:
        f.write("""#!/bin/bash
echo "Starting Zeeky AI..."
echo ""
echo "🚀 Zeeky AI is starting up..."
echo "🌐 Frontend will be available at: http://localhost:8000"
echo "🔧 Backend API will be available at: http://localhost:8000/docs"
echo ""
python3 app.py
""")
    
    # Make shell script executable on Unix systems
    if os.name != 'nt':
        os.chmod("start_zeeky.sh", 0o755)
    
    print("   ✅ Startup scripts created")
    print("      - Windows: start_zeeky.bat")
    print("      - Unix/Linux/Mac: start_zeeky.sh")

def test_installation():
    """Test the installation"""
    print("\n🧪 Testing installation...")
    
    try:
        # Test imports
        import fastapi
        import uvicorn
        import httpx
        print("   ✅ All required packages imported successfully")
        
        # Test enhanced AI system
        from zeeky_enhanced_ai import enhanced_zeeky
        print("   ✅ Enhanced AI system loaded")
        
        # Test configuration
        from config import get_openai_config
        config = get_openai_config()
        if config['api_key'] != 'your-openai-key-here':
            print("   ✅ OpenAI API key configured")
        else:
            print("   ⚠️  OpenAI API key not configured (will use simulation mode)")
        
        return True
        
    except ImportError as e:
        print(f"   ❌ Import error: {e}")
        return False
    except Exception as e:
        print(f"   ❌ Test failed: {e}")
        return False

def print_next_steps():
    """Print next steps for the user"""
    print("\n" + "="*60)
    print("🎉 ZEEKY AI SETUP COMPLETE!")
    print("="*60)
    print("\n📋 Next Steps:")
    print("   1. Start Zeeky AI:")
    if os.name == 'nt':
        print("      • Double-click 'start_zeeky.bat'")
        print("      • Or run: python app.py")
    else:
        print("      • Run: ./start_zeeky.sh")
        print("      • Or run: python3 app.py")
    
    print("\n   2. Open your browser and go to:")
    print("      • Frontend: http://localhost:8000")
    print("      • API Docs: http://localhost:8000/docs")
    
    print("\n   3. Try these features:")
    print("      • 🎭 Switch between AI personalities")
    print("      • 🤝 Real-time collaboration")
    print("      • 🧪 Live code execution")
    print("      • 👁️ Image generation and analysis")
    print("      • 🔊 Voice interactions")
    
    print("\n💡 Tips:")
    print("   • Configure OpenAI API key for real AI responses")
    print("   • Check the documentation for advanced features")
    print("   • Join our community for support and updates")
    
    print("\n🚀 Enjoy your enhanced Zeeky AI experience!")

def main():
    """Main setup function"""
    print_banner()
    
    # Check Python version
    if not check_python_version():
        sys.exit(1)
    
    # Install requirements
    if not install_requirements():
        print("\n❌ Failed to install requirements")
        sys.exit(1)
    
    # Setup environment
    if not setup_environment():
        print("\n❌ Failed to setup environment")
        sys.exit(1)
    
    # Create startup scripts
    create_startup_script()
    
    # Test installation
    if not test_installation():
        print("\n❌ Installation test failed")
        sys.exit(1)
    
    # Print next steps
    print_next_steps()

if __name__ == "__main__":
    main()
